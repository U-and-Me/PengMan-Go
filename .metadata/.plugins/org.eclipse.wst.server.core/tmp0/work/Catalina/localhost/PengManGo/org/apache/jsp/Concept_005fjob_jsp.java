/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.44
 * Generated at: 2022-05-11 00:46:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Concept_005fjob_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>PengMan🐧</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/Concept_game.css\">\r\n");
      out.write("    <script src=\"js/Concept_job.js\" defer></script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <div id=\"back\">\r\n");
      out.write("        <img id=\"background\" src=\"img/background.jpg\">\r\n");
      out.write("        <a href=\"index.jsp\"><img id=\"char\" src=\"img/character.png\"></button></a>\r\n");
      out.write("        <span id=\"span\">직업-1단계</span>\r\n");
      out.write("        <div id=\"back_2\">\r\n");
      out.write("            <img id=\"draw_image\" src=\"img/job.png\">\r\n");
      out.write("            <div id=\"back_img\"></div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div id=\"word_line\"></div>\r\n");
      out.write("        <div class=\"warp\">\r\n");
      out.write("            <div class=\"keyboard\">\r\n");
      out.write("                <button id=\"Alpha-A\" onclick=\"checkAlpha(this.id)\" value=\"A\">A</button>\r\n");
      out.write("                <button id=\"Alpha-B\" onclick=\"checkAlpha(this.id)\" value=\"B\">B</button>\r\n");
      out.write("                <button id=\"Alpha-C\" onclick=\"checkAlpha(this.id)\" value=\"C\">C</button>\r\n");
      out.write("                <button id=\"Alpha-D\" onclick=\"checkAlpha(this.id)\" value=\"D\">D</button>\r\n");
      out.write("                <button id=\"Alpha-E\" onclick=\"checkAlpha(this.id)\" value=\"E\">E</button>\r\n");
      out.write("                <button id=\"Alpha-F\" onclick=\"checkAlpha(this.id)\" value=\"F\">F</button>\r\n");
      out.write("                <button id=\"Alpha-G\" onclick=\"checkAlpha(this.id)\" value=\"G\">G</button>\r\n");
      out.write("                <button id=\"Alpha-H\" onclick=\"checkAlpha(this.id)\" value=\"H\">H</button>\r\n");
      out.write("                <button id=\"Alpha-I\" onclick=\"checkAlpha(this.id)\" value=\"I\">I</button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"keyboard\">\r\n");
      out.write("                <button id=\"Alpha-J\" onclick=\"checkAlpha(this.id)\" value=\"J\">J</button>\r\n");
      out.write("                <button id=\"Alpha-K\" onclick=\"checkAlpha(this.id)\" value=\"K\">K</button>\r\n");
      out.write("                <button id=\"Alpha-L\" onclick=\"checkAlpha(this.id)\" value=\"L\">L</button>\r\n");
      out.write("                <button id=\"Alpha-M\" onclick=\"checkAlpha(this.id)\" value=\"M\">M</button>\r\n");
      out.write("                <button id=\"Alpha-N\" onclick=\"checkAlpha(this.id)\" value=\"N\">N</button>\r\n");
      out.write("                <button id=\"Alpha-O\" onclick=\"checkAlpha(this.id)\" value=\"O\">O</button>\r\n");
      out.write("                <button id=\"Alpha-P\" onclick=\"checkAlpha(this.id)\" value=\"P\">P</button>\r\n");
      out.write("                <button id=\"Alpha-Q\" onclick=\"checkAlpha(this.id)\" value=\"Q\">Q</button>\r\n");
      out.write("                <button id=\"Alpha-R\" onclick=\"checkAlpha(this.id)\" value=\"R\">R</button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"keyboard\">\r\n");
      out.write("                <button id=\"Alpha-S\" onclick=\"checkAlpha(this.id)\" value=\"S\">S</button>\r\n");
      out.write("                <button id=\"Alpha-T\" onclick=\"checkAlpha(this.id)\" value=\"T\">T</button>\r\n");
      out.write("                <button id=\"Alpha-U\" onclick=\"checkAlpha(this.id)\" value=\"U\">U</button>\r\n");
      out.write("                <button id=\"Alpha-V\" onclick=\"checkAlpha(this.id)\" value=\"V\">V</button>\r\n");
      out.write("                <button id=\"Alpha-W\" onclick=\"checkAlpha(this.id)\" value=\"W\">W</button>\r\n");
      out.write("                <button id=\"Alpha-X\" onclick=\"checkAlpha(this.id)\" value=\"X\">X</button>\r\n");
      out.write("                <button id=\"Alpha-Y\" onclick=\"checkAlpha(this.id)\" value=\"Y\">Y</button>\r\n");
      out.write("                <button id=\"Alpha-Z\" onclick=\"checkAlpha(this.id)\" value=\"Z\">Z</button>\r\n");
      out.write("               <button id=\"heart\" onclick=\"audio.play();\" value=\"♡\">🎶</button>\r\n");
      out.write("            <script>\r\n");
      out.write("                let audio = new Audio('music/moring.mp3');\r\n");
      out.write("                audio.addEventListener('ended', function () {\r\n");
      out.write("                    this.currentTime = 0;\r\n");
      out.write("                    audio.play();\r\n");
      out.write("                }, false);\r\n");
      out.write("            </script>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <span id=\"word_Info\">\r\n");
      out.write("            맞춘 단어\r\n");
      out.write("        </span>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>l>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
